name: Build Project
on:
  push:
    tags:
      - "v*"
jobs:
  build:
    runs-on: ${{ matrix.os.runner }}
    strategy:
      fail-fast: false
      matrix:
        os:
          # - { id: ubuntu, runner: ubuntu-latest }
          # - { id: windows, runner: windows-latest }
          # - { id: macos, runner: macos-latest }
          - id: fedora
            runner: ubuntu-latest
            container: fedora:latest
        node-version: ["24.0.2"]
    container: ${{ matrix.os.container }}
    env:
      OS_ID: ${{ matrix.os.id }}
      RUNNER_OS: ${{ matrix.os.runner }}
      NODE_VERSION: ${{ matrix.node-version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install build dependencies
        env:
          INSTALL_SCRIPT: scripts/install/${{ matrix.os.id }}.sh
        run: |
          chmod +x $INSTALL_SCRIPT
          $INSTALL_SCRIPT
        shell: bash

      - name: Prepare build environment
        env:
          PREPARE_SCRIPT: scripts/prepare/${{ matrix.os.id }}.sh
        run: |
          chmod +x $PREPARE_SCRIPT
          $PREPARE_SCRIPT $NODE_VERSION
        shell: bash

      - name: Enable build caching
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 5G
          key: ${{ matrix.os.id }}-${{ matrix.node-version }}

      - name: Build project
        env:
          BUILD_SCRIPT: scripts/build/${{ matrix.os.id }}.sh
        run: |
          chmod +x $BUILD_SCRIPT
          $BUILD_SCRIPT $NODE_VERSION
        shell: bash

      - name: List build files
        env:
          LIST_SCRIPT: scripts/list/${{ matrix.os.id }}.sh
        run: |
          chmod +x $LIST_SCRIPT
          $LIST_SCRIPT $NODE_VERSION

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          overwrite: true
          name: build-${{ matrix.os.id }}-${{ matrix.node-version }}
          path: ${{ env.FILES }}
  release:
    name: Create GitHub release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create release
        uses: elgohr/Github-Release-Action@v5
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          title: Release ${{ github.ref_name }}
          workdir: artifacts
          tag: ${{ github.ref_name }}

      - name: Upload release assets
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          gh release upload "${{ github.ref_name }}" "$(echo artifacts/**/*)" --clobber
